@prefix : <http://example.org/> .
@prefix rules: <http://example.org/rules/> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix x3do: <https://www.web3d.org/specifications/X3dOntology4.0#> .
@prefix x3d: <https://www.web3d.org/specifications/x3d-4.0.xsd#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

rules:NurbsCurveMap a rr:TriplesMap;
  rml:logicalSource [
    rml:source "HelloWorld.x3d";
    rml:referenceFormulation ql:XPath;
    rml:iterator "//NurbsCurve"
  ];
 rr:subjectMap [
  rr:template "http://example.org/{@id}";
  rr:class owl:NamedIndividual
 ];
 rr:predicateObjectMap [
  rr:predicate rdf:type;
  rr:objectMap [
    rr:constant x3do:NurbsCurve
  ]
 ];
 rr:predicateObjectMap [
  rr:predicate  x3do:hasParent;
  rr:objectMap [
    rr:template "http://example.org/{../@id}"
  ]
 ];
 rr:predicateObjectMap [
  rr:predicate x3do:knot;
  rr:objectMap [
    rml:reference "@knot"
  ]
 ];
 rr:predicateObjectMap [
  rr:predicate x3do:order;
  rr:objectMap [
    rml:reference "@order"
  ]
 ];
 rr:predicateObjectMap [
  rr:predicate x3do:weight;
  rr:objectMap [
    rml:reference "@weight"
  ]
 ];
 rr:predicateObjectMap [
  rr:predicate x3do:tessellation;
  rr:objectMap [
    rml:reference "@tessellation"
  ]
 ];
 rr:predicateObjectMap [
  rr:predicate x3do:closed;
  rr:objectMap [
    rml:reference "@closed"
  ]
 ];
 rr:predicateObjectMap [
  rr:predicate x3do:containerField;
  rr:objectMap [
    rml:reference "@containerField"
  ]
 ];
 rr:predicateObjectMap [
  rr:predicate x3do:class;
  rr:objectMap [
    rml:reference "@class"
  ]
 ];
 rr:predicateObjectMap [
  rr:predicate x3do:DEF;
  rr:objectMap [
    rml:reference "@DEF"
  ]
 ];
 rr:predicateObjectMap [
  rr:predicate x3do:USE;
  rr:objectMap [
    rml:reference "@USE"
  ]
].

rules:NurbsCurveMap2 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "HelloWorld.x3d";
    rml:referenceFormulation ql:XPath;
    rml:iterator "//NurbsCurve/IS"
  ]; 
 rr:subjectMap [
    rr:template "http://example.org/{../@id}";
  ];
 rr:predicateObjectMap [
  rr:predicate x3do:hasIS;
  rr:objectMap [
    rr:template "http://example.org/{@id}"
  ]
].

rules:NurbsCurveMap3 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "HelloWorld.x3d";
    rml:referenceFormulation ql:XPath;
    rml:iterator "//NurbsCurve/MetadataDouble"
  ]; 
 rr:subjectMap [
    rr:template "http://example.org/{../@id}";
  ];
 rr:predicateObjectMap [
  rr:predicate x3do:hasMetadata;
  rr:objectMap [
    rr:template "http://example.org/{@id}"
  ]
].

rules:NurbsCurveMap4 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "HelloWorld.x3d";
    rml:referenceFormulation ql:XPath;
    rml:iterator "//NurbsCurve/MetadataFloat"
  ]; 
 rr:subjectMap [
    rr:template "http://example.org/{../@id}";
  ];
 rr:predicateObjectMap [
  rr:predicate x3do:hasMetadata;
  rr:objectMap [
    rr:template "http://example.org/{@id}"
  ]
].

rules:NurbsCurveMap5 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "HelloWorld.x3d";
    rml:referenceFormulation ql:XPath;
    rml:iterator "//NurbsCurve/MetadataInteger"
  ]; 
 rr:subjectMap [
    rr:template "http://example.org/{../@id}";
  ];
 rr:predicateObjectMap [
  rr:predicate x3do:hasMetadata;
  rr:objectMap [
    rr:template "http://example.org/{@id}"
  ]
].

rules:NurbsCurveMap6 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "HelloWorld.x3d";
    rml:referenceFormulation ql:XPath;
    rml:iterator "//NurbsCurve/MetadataSet"
  ]; 
 rr:subjectMap [
    rr:template "http://example.org/{../@id}";
  ];
 rr:predicateObjectMap [
  rr:predicate x3do:hasMetadata;
  rr:objectMap [
    rr:template "http://example.org/{@id}"
  ]
].

rules:NurbsCurveMap7 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "HelloWorld.x3d";
    rml:referenceFormulation ql:XPath;
    rml:iterator "//NurbsCurve/MetadataString"
  ]; 
 rr:subjectMap [
    rr:template "http://example.org/{../@id}";
  ];
 rr:predicateObjectMap [
  rr:predicate x3do:hasMetadata;
  rr:objectMap [
    rr:template "http://example.org/{@id}"
  ]
].

rules:NurbsCurveMap8 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "HelloWorld.x3d";
    rml:referenceFormulation ql:XPath;
    rml:iterator "//NurbsCurve/ProtoInstance"
  ]; 
 rr:subjectMap [
    rr:template "http://example.org/{../@id}";
  ];
 rr:predicateObjectMap [
  rr:predicate x3do:hasMetadata;
  rr:objectMap [
    rr:template "http://example.org/{@id}"
  ]
].

rules:NurbsCurveMap9 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "HelloWorld.x3d";
    rml:referenceFormulation ql:XPath;
    rml:iterator "//NurbsCurve/GeoCoordinate"
  ]; 
 rr:subjectMap [
    rr:template "http://example.org/{../@id}";
  ];
 rr:predicateObjectMap [
  rr:predicate x3do:hasCoord;
  rr:objectMap [
    rr:template "http://example.org/{@id}"
  ]
].

rules:NurbsCurveMap10 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "HelloWorld.x3d";
    rml:referenceFormulation ql:XPath;
    rml:iterator "//NurbsCurve/Coordinate"
  ]; 
 rr:subjectMap [
    rr:template "http://example.org/{../@id}";
  ];
 rr:predicateObjectMap [
  rr:predicate x3do:hasCoord;
  rr:objectMap [
    rr:template "http://example.org/{@id}"
  ]
].

rules:NurbsCurveMap11 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "HelloWorld.x3d";
    rml:referenceFormulation ql:XPath;
    rml:iterator "//NurbsCurve/CoordinateDouble"
  ]; 
 rr:subjectMap [
    rr:template "http://example.org/{../@id}";
  ];
 rr:predicateObjectMap [
  rr:predicate x3do:hasCoord;
  rr:objectMap [
    rr:template "http://example.org/{@id}"
  ]
].